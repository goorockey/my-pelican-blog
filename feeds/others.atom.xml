<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Goorockey's Blog</title><link href="http://www.goorockey.com/" rel="alternate"></link><link href="http://www.goorockey.com/feeds/others.atom.xml" rel="self"></link><id>http://www.goorockey.com/</id><updated>2013-09-08T01:18:00+08:00</updated><entry><title>我的firefox</title><link href="http://www.goorockey.com/blog/2013/09/08/wo-de-firefox/" rel="alternate"></link><updated>2013-09-08T01:18:00+08:00</updated><author><name>goorockey</name></author><id>tag:www.goorockey.com,2013-09-08:blog/2013/09/08/wo-de-firefox/</id><summary type="html">
&lt;p&gt;好久好久没有更新blog了，markdown怎么用都忘了。。写blog总结还是很有用的。今天写一下答应过某人写自己firefox的状况。&lt;/p&gt;
&lt;h2 id="_1"&gt;使用感受&lt;/h2&gt;
&lt;p&gt;主流的浏览器都用过，坚持用firefox的原因主要是因为&lt;a href="http://www.vimperator.org" title="vimperator"&gt;vimperator&lt;/a&gt;，纯键盘地上网很cool很快捷，而且我用的时候会把地址栏、add-on bar等等都去掉，最大化可视范围。 
虽然现在firefox在内存、响应速度上还是比不上chrome，但谁叫chrome的vim化插件不好用呢～&lt;/p&gt;
&lt;p&gt;另外用firefox写web的时候也比较方便，现在自带的“Responsive Design View"很方便地调试移动端的web体验。firefox每次升级都会有针对developer的new feature，足以看出它很重视开发者的功能。&lt;/p&gt;
&lt;!-- more --&gt;
&lt;h2 id="_2"&gt;插件&lt;/h2&gt;
&lt;p&gt;装插件折腾自己的firefox是必须的。当我看到有的人用firefox基本就是原装的，我都觉得他不适合用firefox，倒不如用另外国产标配好的浏览器让自己用得舒服一点。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;vimperator&lt;/strong&gt;    神器&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;firebug&lt;/strong&gt;   神器&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;greasemonkey&lt;/strong&gt;  神器，firefox插件的扩展&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;adblock plus&lt;/strong&gt;  去广告&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;All-in-One Sidebar&lt;/strong&gt;    侧边栏管理插件，下载等等&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;AutoPager&lt;/strong&gt; 自动加载下一页&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;AutoProxy&lt;/strong&gt; 科学上网&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;DownThemAll&lt;/strong&gt; 下载管理&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;feedly&lt;/strong&gt;  rss reader&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;flashblock&lt;/strong&gt; 默认禁止页面的flash，加快加载，页面体验也爽些&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;https finder&lt;/strong&gt; 如果网页支持https，会自动用https&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;instasaver&lt;/strong&gt; instapaper的插件&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;lastpass&lt;/strong&gt; 密码管理&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;memroy fox&lt;/strong&gt; 优化firefox的内存&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;quickdrag&lt;/strong&gt; 鼠标拖拽&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;refcontrol&lt;/strong&gt; 修改refer，破防盗链&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;stumbleupon&lt;/strong&gt; 发现好网站、消磨时间必备神器&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;tab mix plus&lt;/strong&gt; 标签管理&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;weibo_wc&lt;/strong&gt;  重新定制新浪微博的样式，很整洁舒服&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;wiktionary and google translate&lt;/strong&gt; 翻译&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;wiznote web clipper&lt;/strong&gt; 为知插件&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="_3"&gt;其他&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;主页设成空白页，这样每次打开都是自己主动获取信息，而不会在“自己以为有用的网站“上浪费时间和精力&lt;/li&gt;
&lt;li&gt;autoproxy+&lt;a href="https://code.google.com/p/greatagent" title="greatagent"&gt;greatagent&lt;/a&gt;，配合https，科学上网&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;暂时就写到这吧～&lt;/p&gt;</summary><category term="firefox"></category></entry><entry><title>抓网页保存为pdf</title><link href="http://www.goorockey.com/blog/2012/10/29/zhua-wang-ye-bao-cun-wei-pdf/" rel="alternate"></link><updated>2012-10-29T23:46:00+08:00</updated><author><name>goorockey</name></author><id>tag:www.goorockey.com,2012-10-29:blog/2012/10/29/zhua-wang-ye-bao-cun-wei-pdf/</id><summary type="html">
&lt;p&gt;最近在刷题，总想把题目保存下来，这样没网的时候也可以做题，放手机里也可以随时做了。所以就想着把题目抓下来保存为比较通用的pdf了。&lt;/p&gt;
&lt;p&gt;一开始想的是先做类似整站下载，把文字和图片都抓下来，然后再做html转pdf。自己写工具抓下来的话，要抓图片、修改网页里面图片的链接，昨天调研了一下，没找到用python有什么方便的办法，就放弃这条路了。&lt;/p&gt;
&lt;p&gt;今天突然找到，网上还是有很多直接网页保存为pdf的工具、网站的。最方便、强大的要数&lt;a href="http://pdfmyrul" title="pdfmyurl"&gt;pdfmyurl&lt;/a&gt;了。&lt;/p&gt;
&lt;!-- more --&gt;
&lt;h2 id="pdfmyurl"&gt;pdfmyurl&lt;/h2&gt;
&lt;p&gt;可以通过http://pdfmyurl.com?url=\&amp;lt;siteurl&amp;gt; ,来把指定链接的网页保存为pdf，而且是直接返回的，即用wget http://pdfmyurl.com?url=\&amp;lt;siteurl&amp;gt;就可以直接得到所需的pdf，不用再按什么按钮之类的了。&lt;/p&gt;
&lt;p&gt;在官网上可以发现，pdfmyurl可以算是个api服务，可以通过传很多get参数来得到需要的pdf结果。比较常用的有：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;--filename    输出的pdf文件名&lt;/li&gt;
&lt;li&gt;--page-size   页面大小，默认是A4&lt;/li&gt;
&lt;li&gt;--proxy       通过制定的代理访问该页面，--username --password还指定用户和密码&lt;/li&gt;
&lt;li&gt;-b            使得到的pdf有目录、书签、页眉等书的样式，不过目录不咋地&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;pdfmyurl已经很强大了，但每次只能完成一个网面的pdf，所以还得想办法做pdf的合并。&lt;/p&gt;
&lt;h2 id="pdftk"&gt;pdftk&lt;/h2&gt;
&lt;p&gt;&lt;a href="http://www.pdflabs.com/tools/pdftk-the-pdf-toolkit/" title="pdftk"&gt;pdftk&lt;/a&gt;也是一个pdf方面的神奇，可以完成pdf合并、合并多个pdf指定页、分割、加水印等，而且是跨windows、linux、mac多个平台的。不过我也只用来合并pdf:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="err"&gt;$&lt;/span&gt; &lt;span class="n"&gt;pdftk&lt;/span&gt; &lt;span class="mf"&gt;1.&lt;/span&gt;&lt;span class="n"&gt;pdf&lt;/span&gt; &lt;span class="mf"&gt;2.&lt;/span&gt;&lt;span class="n"&gt;pdf&lt;/span&gt; &lt;span class="n"&gt;cat&lt;/span&gt; &lt;span class="n"&gt;output&lt;/span&gt; &lt;span class="mf"&gt;12.&lt;/span&gt;&lt;span class="n"&gt;pdf&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;但弄出来的pdf是没有目录的。&lt;/p&gt;
&lt;p&gt;所以更好的办法其实是用更强大的latex。不过latex还有待系统地研究，现在的再写个bash就已经满足我90%的要求了～&lt;/p&gt;
&lt;hr/&gt;
&lt;p&gt;更新：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;今天还是发现了一个用python抓oj的，有空参考一下，自己实现一个。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;今天还发现，pdfmyurl似乎对单个ip一定时间内的请求做了限制，超过限制后，请求都会返回一个错误信息的pdf。我就借cjb的tor解决了这个问题（又用tor干了邪恶的事了）。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;</summary><category term="others"></category><category term="pdf"></category></entry><entry><title>Code Swarm</title><link href="http://www.goorockey.com/blog/2012/02/03/code-swarm/" rel="alternate"></link><updated>2012-02-03T00:00:00+08:00</updated><author><name>goorockey</name></author><id>tag:www.goorockey.com,2012-02-03:blog/2012/02/03/code-swarm/</id><summary type="html">
&lt;p&gt;今天拿自己项目组svn的日志来小玩了一下code swarm。&lt;/p&gt;
&lt;h2 id="code-swarm"&gt;什么是code swarm?&lt;/h2&gt;
&lt;p&gt;code swarm是可以把svn、cvs、git等代码管理系统的日志，以可视化的形式展现的项目。&lt;/p&gt;
&lt;p&gt;swarm是蜂群的意思，code swarm会以蜂群的形式表示每个人上传的文件。&lt;/p&gt;
&lt;!--more--&gt;
&lt;p&gt;很多大的项目，如Apache、Python、豆瓣等，都做了自己的code swarm。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Apache、Python等：&lt;a href="http://www.michaelogawa.com/code_swarm"&gt;http://www.michaelogawa.com/code_swarm&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;豆瓣：&lt;a href="http://v.youku.com/v_show/id_XMzQzNDc4MDk2.html"&gt;http://v.youku.com/v_show/id_XMzQzNDc4MDk2.html&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;我个人感觉，看别人的code swarm没什么特别的感受，只有看自己项目的才有感觉，呵呵。&lt;/p&gt;
&lt;h2 id="code-swarm_1"&gt;使用 code swarm&lt;/h2&gt;
&lt;p&gt;可以从它google code 的主页中下载代码：&lt;a href="http://code.google.com/p/codeswarm/downloads/list"&gt;http://code.google.com/p/codeswarm/downloads/list&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;我参照别人博客，使用了code swarm别的fork：&lt;a href="https://github.com/rictic/code_swarm"&gt;https://github.com/rictic/code_swarm&lt;/a&gt;，它可以显示每个人的头像。&lt;/p&gt;
&lt;p&gt;根据wiki或下载包内的README，使用code swarm，要先安装java和ant。&lt;/p&gt;
&lt;p&gt;code swarm有可以通过run.bat或者runrepositoryfetch.bat来启动。run.bat需要我们手工把svn等软件的日志转为code swarm所需的xml，而runrepositoryfetch.bat可以输入reposition url，让code swarm自动下载日志并转换。我选择简单的runrepositoryfetch.bat方式。&lt;/p&gt;
&lt;p&gt;在命令行提示中选择配置文件后，code swarm就能呈现了，但还可以修改配置来达到自己的效果。&lt;/p&gt;
&lt;h2 id="code-swarm_2"&gt;配置code swarm&lt;/h2&gt;
&lt;p&gt;我觉得关键的配置：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;InputFile&lt;/strong&gt; code swarm所需的xml文件&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;TakeSnapshots&lt;/strong&gt; 是否保存每一帧图片。code swarm不能直接输出视频，只能输出每一帧图片。所以我们要导出视频的话，需要自行把每一帧图片转换为视频。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;SnapshotLocation&lt;/strong&gt; 保存输出图片的目录&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;还有一些控制帧速度，显示项等等的配置。&lt;/p&gt;
&lt;p&gt;以下是fork中才有的配置：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;AvatarFetcher&lt;/strong&gt; 每个人使用头像的来源。可以是NoAvatar（没有头像），GravatarFetcher（程序自己生成），LocalAvatar（提供本地目录，使用跟commiter id对应的头像）。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;LocalAvatarDirectory&lt;/strong&gt; LocalAvatar方式时，存放头像的目录，目录里如果有文件名与commiter id相同的图片，则使用该图片否则使用默认头像。如果没有默认头像，则程序会中断。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;LocalAvatarDefaultPic&lt;/strong&gt; 默认头像&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;AvatarSize&lt;/strong&gt; 选择LocalAvatar方式时，每张头像的高或宽。这里要求每张头像图片的尺寸相同，且一定是正方形。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;CircularAvatars&lt;/strong&gt; 用圆形截取头像图片，这会用到程序代码src下的mask.png图片，这里也要注意修改AvatarSize后，mask.png的尺寸也要改变，否则程序中断。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="code-swarm_3"&gt;把code swarm的图片合成为视频&lt;/h2&gt;
&lt;p&gt;方法很多，抱着学习的心态，我试着按wiki的方法用mencoder。&lt;/p&gt;
&lt;p&gt;我要加背景音乐，所以加了参数-audiofile：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;mencoder&lt;/span&gt; &lt;span class="n"&gt;mf&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="c1"&gt;//*.png -mf fps=33:type=png -ovc lavc -oac copy –audiofile bg.mp3 -o my.avi&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;这里可以通过修改fps的值来控制生成视频的帧速度。&lt;/p&gt;
&lt;p&gt;还可以用mencoder添加字幕，这个我就没做了。&lt;/p&gt;
&lt;p&gt;我的视频：&lt;a href="http://v.youku.com/v_show/id_XMzQ4NjA5ODYw.html"&gt;http://v.youku.com/v_show/id_XMzQ4NjA5ODYw.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;P.S.相关资料&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;【code swarm wiki】 ：&lt;a href="http://code.google.com/p/codeswarm/wiki/GeneratingAVideo"&gt;http://code.google.com/p/codeswarm/wiki/GeneratingAVideo&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;【fork of code swarm】：&lt;a href="https://github.com/rictic/code_swarm"&gt;https://github.com/rictic/code_swarm&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;【制作code swarm】：&lt;a href="http://blog.xupeng.me/2012/01/12/code-swarm/"&gt;http://blog.xupeng.me/2012/01/12/code-swarm/&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;【用mencoder把多张图片合成为视频】：&lt;a href="http://www.mplayerhq.hu/DOCS/HTML/en/menc-feat-enc-images.html"&gt;http://www.mplayerhq.hu/DOCS/HTML/en/menc-feat-enc-images.html&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;【使用mencoder】：&lt;a href="http://hi.baidu.com/creatives/blog/item/41f6c32ad06cdb2bd42af128.html"&gt;http://hi.baidu.com/creatives/blog/item/41f6c32ad06cdb2bd42af128.html&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;【windows下安装mencoder】：&lt;a href="http://hi.baidu.com/%D7%AF%D7%D3%C8%E7%CA%C7%CB%B5/blog/item/611a28b11abebd5f0823021b.html"&gt;http://hi.baidu.com/%D7%AF%D7%D3%C8%E7%CA%C7%CB%B5/blog/item/611a28b11abebd5f0823021b.html&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;</summary><category term="趣味"></category></entry></feed>